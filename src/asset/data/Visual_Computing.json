[   
    {
        "Title":"Computer Vision",
        "pic1_src":"./asset/photo/Assignment/10/learnedWeights.png",
        "pic1_alt":"Learned Weights",
        "pic2_src":"./asset/photo/Assignment/10/Optim.png", 
        "pic2_alt":"Optim",
        "Category":"Stanford CS231n",
        "line":2,
        "Des1":"Python, Numpy, kNN, Softmax, SVM classifier, Cross Validation, MLP, CNN.",
        "Des2":"Caption: RNN, Attention. Generation: GAN, VAE.", 
        "Time":"2023.1.9-2024.1",
        "Blog":"blog10",
        "Github":"https://github.com/PeterHUistyping/Stanford_CS231n-Deep_Learning-for-Computer_Vision"
    },
    {
        "pic1_src":"./asset/photo/Assignment/blog3/Self-similar_fractals.png",
        "pic1_alt":"Self-similar fractals",
        "pic2_src":"./asset/photo/Assignment/blog3/MyProject/assignment2_Tri-Ray/Raytracing2.png",
        "pic2_alt":"Ray tracing",
        "Title":"Introduction to Computer Graphics",
        "Category":"C++, OpenGL",
        "line":3,
        "Des1": " With the help of the Open Course, I have implemented a ray tracer using C++, with two kinds of cameras, orthonormal and perspective camera respectively.",
        "Des2": "as well as different geometry primitives, e.g. sphere, triangle, plane, triangle mesh, just to name a few. ",
        "Des3": "coding skills: command line argument; using assertion; #progma in header, .vscode configuration.",
        "Time":"2022.8-2022.12",
        "Italic":"MIT6.387",
        "Github":"https://github.com/PeterHUistyping/MIT6.837-CG-Fall2004-Assignment",
        "Blog":"blog3" 
    }
]
